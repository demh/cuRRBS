axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.7);
plot_1;
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual("Status", values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.7);
plot_1;
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual("Status", values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE, rev=TRUE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.7);
plot_1;
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual("Status", values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
guide_legend(reverse = TRUE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.7);
plot_1;
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual("Status", values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.7);
plot_1;
## Plot mean CpG content vs proportion of intragenic sites.
raw_data_1 <- raw_data;
raw_data_1$highlight <- ifelse(raw_data_1$enzyme == 'BsiSI', 'highlight', 'normal');
col_1 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_1 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual("Status", values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.7);
plot_1;
raw_data_1 <- raw_data;
raw_data_1$highlight <- ifelse(raw_data_1$enzyme == 'BsiSI', 'highlight', 'normal');
col_1 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_1 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual("Status", values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_1;
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_1;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
View(raw_data_2)
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(0, 100)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_y_continuous(limit = c(0, 15))
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
## Plot proportion of sites in promoters vs proportion of intragenic sites
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=11.6, y=56.3, xend=11.6, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=11.6, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=11.6, y=56, label = 'MspI', col='red') +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
## Plot proportion of sites in promoters vs proportion of intragenic sites
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=11.6, y=56.3, xend=11.6, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15)) +
annotate("text", x=11.6, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
## Plot proportion of sites in promoters vs proportion of intragenic sites
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=11.65, y=56.3, xend=11.65, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15)) +
annotate("text", x=11.65, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
## Plot mean CpG content vs proportion of intragenic sites.
raw_data_1 <- raw_data;
raw_data_1$highlight <- ifelse(raw_data_1$enzyme == 'BsiSI', 'highlight', 'normal');
col_1 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_1 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_1;
## Plot proportion of sites in promoters vs proportion of intragenic sites
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=11.65, y=56.3, xend=11.65, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15)) +
annotate("text", x=11.65, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
source("https://bioconductor.org/biocLite.R")
biocLite("TFBSTools")
4204-158
source("https://bioconductor.org/biocLite.R")
biocLite("JASPAR2016")
library(TFBSTools);
library(JASPAR2016);
## Obtain PWM for NRF1 from Jaspar database.
opts <- list();
opts[["species"]] <- 10090; # Mus musculus
opts[["name"]] <- "NRF1";
PFMatrix <- getMatrixSet(JASPAR2016, opts);
?PWMatrix
PWM_NFR1 <- PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
bg=c(0.25,0.25,0.25,0.25),
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T'))));
PWM_NFR1 <- PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T'))));
PWM_NFR1
seqLogo(PWM_NFR1)
toICM(PWM_NFR1)
siteset <- searchSeq(PWM_NFR1, seq, seqname="seq1", min.score="60%", strand="*")
PWM_NFR1 <- PWMatrixList(NFR1=PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T')))));
siteset <- searchSeq(PWM_NFR1, seq, seqname="seq1", min.score="60%", strand="*")
##### Find the sites where NRF1 binds theoretically in the mouse genome (mm10) #####
library(JASPAR2016);
library(TFBSTools);
library(Biostrings);
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
PFMatrixList <- getMatrixSet(JASPAR2016, opts);
PFMatrixList
PFMatrixList[[1]]
pwms <- lapply(PFMatrixList, toPWM);
pwms
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="60%", strand="*")
pwms <- toPWM(PFMatrixList);
pwms
## Scan the mouse genome for putative NRF1 binding sites.
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="60%", strand="*")
siteset
siteset[[1]]
## Scan the mouse genome for putative NRF1 binding sites.
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="80%", strand="*")
siteset
siteset[[1]]
PFMatrixList[[1]]
##### Find the sites where NRF1 binds theoretically in the mouse genome (mm10) #####
library(JASPAR2016);
library(TFBSTools);
library(Biostrings);
## Obtain (human) PWM from Jaspar 2016.
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
PFMatrixList <- getMatrixSet(JASPAR2016, opts);
pwms <- toPWM(PFMatrixList);
pwms
pwms[[1]]
0.425/2
0.2125*2
1-0.2125*2
(1-0.2125*2)/2
1-0.425
pwms
pwms[[1]]
#### Lift CTCF sites coordinates from hg19 to hg38 ####
library(GenomicRanges);
library(rtracklayer);
setwd('~/Documents/Manuscripts/cuRRBS/Figures/Figure_3/3X/CTCF_sites/');
# Read the coordinates for CTCF sites in hg19.
raw_hg19 <- read.table(file='CTCF_upregulated_and_reactived_sites_hg19.bed',
sep='\t');
# Create a GRanges object with this information.
grange_hg19 <- GRanges(seqnames=as.character(raw_hg19[,1]),
ranges=IRanges(start=as.numeric(raw_hg19[,2]) + 1,
end=as.numeric(raw_hg19[,3])));
grange_hg19
chain_hg <- import.chain('hg19ToHg38.over.chain');
lifted_hg38 <- liftOver(x=grange_hg19, chain=chain_hg);
lifted_hg38
lifted_hg38[[1]]
length(lifted_hg38[[i]])
length(lifted_hg38[[1]])
for(i in 1:length(lifted_hg38)){
print(length(lifted_hg38[[i]]))
}
prueba <- c();
for(i in 1:length(lifted_hg38)){
prueba <- c(prueba, length(lifted_hg38[[i]]))
}
prueba
which(prueba != 1)
prueba[which(prueba != 1)]
length(prueba)
length(prueba) + 7
length(unlist(lifted_hg38))
seqnames(unlist(lifted_hg38))
as.character(seqnames(unlist(lifted_hg38)))
start(unlist(lifted_hg38))
final_bed <- data.frame(chr=as.character(seqnames(unlist(lifted_hg38))),
start=start(unlist(lifted_hg38)) - 1,
end=end(unlist(lifted_hg38)));
View(final_bed)
lifted_hg38
?write.table
#### Lift CTCF sites coordinates from hg19 to hg38 ####
library(GenomicRanges);
library(rtracklayer);
setwd('~/Documents/Manuscripts/cuRRBS/Figures/Figure_3/3X/CTCF_sites/');
# Read the coordinates for CTCF sites in hg19.
raw_hg19 <- read.table(file='CTCF_upregulated_and_reactived_sites_hg19.bed',
sep='\t');
# Create a GRanges object with this information.
grange_hg19 <- GRanges(seqnames=as.character(raw_hg19[,1]),
ranges=IRanges(start=as.numeric(raw_hg19[,2]) + 1,
end=as.numeric(raw_hg19[,3])));
# Lift-over the coordinates.
chain_hg <- import.chain('hg19ToHg38.over.chain');
lifted_hg38 <- liftOver(x=grange_hg19, chain=chain_hg);
# Create the final BED file.
final_bed <- data.frame(chr=as.character(seqnames(unlist(lifted_hg38))),
start=start(unlist(lifted_hg38)) - 1,
end=end(unlist(lifted_hg38)));
View(final_bed)
write.table(x=final_bed, file="CTCF_upregulated_and_reactivated_sites_hg38.bed", quote=F, sep='\t',
row.names = F, col.names = F);
source('~/Documents/Manuscripts/cuRRBS/Figures/Figure_3/3X/CTCF_sites/lift_CTCF_sites_hg19_to_hg38.R')
final_bed[,3] - final_bed[,2]
all(final_bed[,3] - final_bed[,2] == 150)
which(final_bed[,3] - final_bed[,2] == 150)
which(!(final_bed[,3] - final_bed[,2] == 150))
(final_bed[,3] - final_bed[,2])[which(!(final_bed[,3] - final_bed[,2] == 150))]
source('~/Documents/Manuscripts/cuRRBS/Figures/Figure_3/3X/CTCF_sites/lift_CTCF_sites_hg19_to_hg38.R')
