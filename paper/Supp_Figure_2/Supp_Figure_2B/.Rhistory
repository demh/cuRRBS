plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(0, 100)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_y_continuous(limit = c(0, 15))
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
## Plot proportion of sites in promoters vs proportion of intragenic sites
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=11.6, y=56.3, xend=11.6, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=11.6, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15))
annotate("text", x=11.6, y=56, label = 'MspI', col='red') +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
## Plot proportion of sites in promoters vs proportion of intragenic sites
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=11.6, y=56.3, xend=11.6, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15)) +
annotate("text", x=11.6, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
## Plot proportion of sites in promoters vs proportion of intragenic sites
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=11.65, y=56.3, xend=11.65, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15)) +
annotate("text", x=11.65, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
## Plot mean CpG content vs proportion of intragenic sites.
raw_data_1 <- raw_data;
raw_data_1$highlight <- ifelse(raw_data_1$enzyme == 'BsiSI', 'highlight', 'normal');
col_1 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_1 <- data.frame(x=1.715, y=56.3, xend=1.715, yend=58);
plot_1 <- ggplot(raw_data_1, aes(x=mean_._CpG_content, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_1) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('Mean CpG content (%)') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit=c(0,2.5)) +
annotate("text", x=1.715, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_1, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_1;
## Plot proportion of sites in promoters vs proportion of intragenic sites
raw_data_2 <- raw_data;
raw_data_2$highlight <- ifelse(raw_data_2$enzyme == 'BsiSI', 'highlight', 'normal');
col_2 <- c("highlight" = "red", "normal" = "gray42");
arrow_data_2 <- data.frame(x=11.65, y=56.3, xend=11.65, yend=58);
raw_data_2$total_promoters = raw_data_2$X._sites_CGI_promoters + raw_data_2$X._sites_non_CGI_promoters;
plot_2 <- ggplot(raw_data_2, aes(x=total_promoters, y=X._sites_intragenic)) +
geom_point(aes(colour = highlight, size=n_sites), alpha=0.6) +
scale_size_continuous(range = c(1, 6), name='Total number\n of sites') +
scale_color_manual(values = col_2) +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
guides(colour=FALSE) +
xlab('% of sites in promoters') + ylab('% of intragenic sites') +
scale_y_continuous(limit = c(30, 60)) + scale_x_continuous(limit = c(0, 15)) +
annotate("text", x=11.65, y=56, label = 'MspI', col='red', size=4) +
geom_segment(data=arrow_data_2, aes(x=x, y=y, xend=xend, yend=yend),
arrow=arrow(length = unit(0.2, "cm")), col='red', size=0.5);
plot_2;
source("https://bioconductor.org/biocLite.R")
biocLite("TFBSTools")
4204-158
source("https://bioconductor.org/biocLite.R")
biocLite("JASPAR2016")
library(TFBSTools);
library(JASPAR2016);
## Obtain PWM for NRF1 from Jaspar database.
opts <- list();
opts[["species"]] <- 10090; # Mus musculus
opts[["name"]] <- "NRF1";
PFMatrix <- getMatrixSet(JASPAR2016, opts);
?PWMatrix
PWM_NFR1 <- PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
bg=c(0.25,0.25,0.25,0.25),
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T'))));
PWM_NFR1 <- PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T'))));
PWM_NFR1
seqLogo(PWM_NFR1)
toICM(PWM_NFR1)
siteset <- searchSeq(PWM_NFR1, seq, seqname="seq1", min.score="60%", strand="*")
PWM_NFR1 <- PWMatrixList(NFR1=PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T')))));
siteset <- searchSeq(PWM_NFR1, seq, seqname="seq1", min.score="60%", strand="*")
##### Find the sites where NRF1 binds theoretically in the mouse genome (mm10) #####
library(JASPAR2016);
library(TFBSTools);
library(Biostrings);
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
PFMatrixList <- getMatrixSet(JASPAR2016, opts);
PFMatrixList
PFMatrixList[[1]]
pwms <- lapply(PFMatrixList, toPWM);
pwms
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="60%", strand="*")
pwms <- toPWM(PFMatrixList);
pwms
## Scan the mouse genome for putative NRF1 binding sites.
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="60%", strand="*")
siteset
siteset[[1]]
## Scan the mouse genome for putative NRF1 binding sites.
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="80%", strand="*")
siteset
siteset[[1]]
PFMatrixList[[1]]
##### Find the sites where NRF1 binds theoretically in the mouse genome (mm10) #####
library(JASPAR2016);
library(TFBSTools);
library(Biostrings);
## Obtain (human) PWM from Jaspar 2016.
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
PFMatrixList <- getMatrixSet(JASPAR2016, opts);
pwms <- toPWM(PFMatrixList);
pwms
pwms[[1]]
0.425/2
0.2125*2
1-0.2125*2
(1-0.2125*2)/2
1-0.425
pwms
pwms[[1]]
read.csv()
?read.csv
raw_ann <- read.csv(input_annotation);
input_annotation <- '~/Desktop/methylation_clock/optimize_RRBS/cuRRBS/utils/isoschizomers_CpG_CHG_CHH_annotation.csv'
output_path <- '~/Desktop/methylation_clock/optimize_RRBS/cuRRBS/utils/enzymes_to_check_CpG_CHG_CHH.txt'
raw_ann <- read.csv(input_annotation);
View(raw_ann)
input_annotation[,1]
raw_ann[,1]
as.character(raw_ann[,1])
unique(as.character(raw_ann[,1]))
iso_families <- unique(as.character(raw_ann[,1]));
family <- iso_families[1]
family
family_members <- raw_ann[which(raw_ann[,1] == family),];
family_members
any(c(0,1,3) == 0)
any(c(1,1,3) == 0)
any(as.numeric(family_members[,3]) == 0)
non_methylation_sensitive <- c(non_methylation_sensitive, family);
non_methylation_sensitive <- c();
non_methylation_sensitive <- c(non_methylation_sensitive, family);
non_methylation_sensitive
family <- family_members[2]
family
family
family_members
family <- iso_families[2]
family
family_members <- raw_ann[which(raw_ann[,1] == family),];
family_members
any(as.numeric(family_members[,3]) == 0)
as.numeric(family_members[,3])
family <- iso_families[3]
family
family_members <- raw_ann[which(raw_ann[,1] == family),];
family_members
any(as.numeric(family_members[,3]) == 0)
?any
any(as.numeric(family_members[,3]) == 0, na.rm=T)
family <- 'AclWI'
family_members <- raw_ann[which(raw_ann[,1] == family),];
family_members
any(as.numeric(family_members[,3]) == 0, na.rm=T)
3099734149/250
12398937 / 1000
12398937 / 1000 / 10
3,234.83 * 1000 / 250
3234.83 * 1000 / 250
1343.468/453.788
119.66775 * 1000000
119667750 / 250
478671 / 1000
453.788 / 478.671
478.671 / 453.788
2725.537669 * 1000000
2725.537669 * 1000000 / 250
10902151 / 1000
10902151 / 10000
1343.468 / 343.460
3088.286401 * 1000000
3088.286401 * 1000000 / 250
3088.286401 * 1000000 / 250 / 1000
3088.286401 * 1000000 / 250 / 1000 / 343.460
250/75
1343.468 / 453.788
119.66775 * 1000000
119.66775 * 1000000 / 250
119.66775 * 1000000 / 250 / 1000
478.671 / 453.788
1343.468 / 343.46
3088.286401 * 1000000
3088.286401 * 1000000 / 250
3088.286401 * 1000000 / 250 / 1000
12353.15 / 343.46
119.66775 * 1000000 / 75
119.66775 * 1000000 / 75 / 1000
119.66775 * 1000000 / 75 / 1000 / 165.313
RF_old = 119.66775 * 1000 / 250
RF_old
RF_new = 119.66775 * 1000 / 75
RF_new
1595.57 / 165.313
RF_old/RF_new
RF_old/RF_new * 3.52
39.33 / 0.3
36.82 / 0.3
81/329
?nls
3.6/100
3.33/41
3.6/85
541+16+30
3088.286401 * 1000 / 75
41177.15 / 1343.468
780 / 40
780 / 80
780 / 20
780/60
3.5+4.8+1.8
3.5+4.8+1.8 / 3
(3.5+4.8+1.8) / 3
mean(c(1,2,3), c(2,3,4), c(3,4,5))
apply(time_n_enzymes[,2:4], 1, mean)
time_n_enzymes <- data.frame(n_enzymes = c(5,10,20,30,40,50,60,70,80,90,100,110,120),
time1 = c(3.5,7.4,39.2,41.6,123,152.4,240.6,317.9,452.8,545,672,749.4,862.8),
time2 = c(4.8,12,28,76,137,163,226,376,500,601,658,847,917),
time3 = c(1.8,10,26,51,114,143,252,303,478,570,667.7,758,986));
time_exp_error <- data.frame(exp_error = c(5,10,15,20,25,30,35,40,45,50),
time1 = c(171,140,112,105,101,103,105,102,103,101),
time2 = c(165,123,120,112,116,104,109,116,107,112),
time3 = c(171,114,121,114,109,121,106,113,112,117));
time_n_sites <- data.frame(n_sites = c(100000,50000,10000,5000,1000,500,100,50,10,5),
time1 = c(331,222,143,117,110,115,114,112,107,109),
time2 = c(315,208,127,116,109,109,108,108,106,107),
time3 = c(313,209,126,117,110,108,108,107,106,109));
time_genome_size <- data.frame(genome_size = c(4.3,0.15,3.8),
time1 = c(141,50,125),
time2 = c(145,48,121),
time3 = c(133,47,139,134));
c(141,50,125)
time3 = c(313,209,126,117,110,108,108,107,106,109));
time_genome_size <- data.frame(genome_size = c(4.3,0.15,3.8),
time1 = c(141,50,125),
time2 = c(145,48,121),
time3 = c(133,47,139));
apply(time_n_enzymes[,2:4], 1, mean)
time_n_enzymes$mean_time <- apply(time_n_enzymes[,2:4], 1, mean);
time_exp_error$mean_time <- apply(time_exp_error[,2:4], 1, mean);
time_n_sites$mean_time <- apply(time_n_sites[,2:4], 1, mean);
time_genome_size$mean_time <- apply(time_genome_size[,2:4], 1, mean);
View(time_exp_error)
library(ggplot2);
p_n_enzymes <- ggplot(time_n_enzymes, aes(x=n_enzymes, y=mean_time)) +
geom_line() + geom_point()
p_n_enzymes
p_n_enzymes <- ggplot(time_n_enzymes, aes(x=n_enzymes, y=mean_time)) +
geom_line() + geom_point() +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Number of enzymes') + ylab('Time (s)');
p_n_enzymes
p_n_enzymes <- ggplot(time_n_enzymes, aes(x=n_enzymes, y=mean_time)) +
geom_line() + geom_point() +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Number of enzymes') + ylab('Mean time (s)');
p_n_enzymes
p_exp_error <- ggplot(time_exp_error, aes(x=exp_error, y=mean_time)) +
geom_line() + geom_point() +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Experimental error (bp)') + ylab('Mean time (s)');
p_exp_error
p_n_sites<- ggplot(time_n_sites, aes(x=n_sites, y=mean_time)) +
geom_line() + geom_point() +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Number of sites of interest') + ylab('Mean time (s)');
p_n_sites
p_n_sites <- ggplot(time_n_sites, aes(x=log(n_sites), y=mean_time)) +
geom_line() + geom_point() +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Number of sites of interest') + ylab('Mean time (s)');
p_n_sites
p_n_sites <- ggplot(time_n_sites, aes(x=n_sites, y=mean_time)) +
geom_line() + geom_point() +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Number of sites of interest') + ylab('Mean time (s)');
p_genome_size <- ggplot(time_genome_size, aes(x=genome_size, y=mean_time)) +
geom_line() + geom_point() +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Genome size ()') + ylab('Mean time (s)');
p_genome_size
p_genome_size <- ggplot(time_genome_size, aes(x=genome_size, y=mean_time)) +
geom_line() + geom_point() +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Genome size (GB of pre-computed files)') + ylab('Mean time (s)');
p_genome_size\
p_genome_size
source('~/Desktop/methylation_clock/optimize_RRBS/cuRRBS_paper/Supp_Figure_5/Supp_Figure_5A_D/timing_plots.R')
source('~/Desktop/methylation_clock/optimize_RRBS/cuRRBS_paper/Supp_Figure_5/Supp_Figure_5A_D/timing_plots.R')
source('~/Desktop/methylation_clock/optimize_RRBS/cuRRBS_paper/Supp_Figure_2/Supp_Figure_2B/plot_correlation_NF_Score.R')
