library(TFBSTools);
library(JASPAR2016);
## Obtain PWM for NRF1 from Jaspar database.
opts <- list();
opts[["species"]] <- 10090; # Mus musculus
opts[["name"]] <- "NRF1";
PFMatrix <- getMatrixSet(JASPAR2016, opts);
?PWMatrix
PWM_NFR1 <- PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
bg=c(0.25,0.25,0.25,0.25),
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T'))));
PWM_NFR1 <- PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T'))));
PWM_NFR1
seqLogo(PWM_NFR1)
toICM(PWM_NFR1)
siteset <- searchSeq(PWM_NFR1, seq, seqname="seq1", min.score="60%", strand="*")
PWM_NFR1 <- PWMatrixList(NFR1=PWMatrix(ID='NRF1',
name='NRF1',
strand="+",
profileMatrix=matrix(c(41,987,35,59,1,2831,21,0,5,3,8,1301,
1024,6,2831,5,2831,43,121,4,2831,40,2831,497,
26,2831,9,2831,0,64,46,2831,4,2831,12,446,
1807,0,2,4,1,20,2831,2,48,64,657,587),
byrow=TRUE, nrow=4, dimnames=list(c('A', 'C', 'G', 'T')))));
siteset <- searchSeq(PWM_NFR1, seq, seqname="seq1", min.score="60%", strand="*")
##### Find the sites where NRF1 binds theoretically in the mouse genome (mm10) #####
library(JASPAR2016);
library(TFBSTools);
library(Biostrings);
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
PFMatrixList <- getMatrixSet(JASPAR2016, opts);
PFMatrixList
PFMatrixList[[1]]
pwms <- lapply(PFMatrixList, toPWM);
pwms
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="60%", strand="*")
pwms <- toPWM(PFMatrixList);
pwms
## Scan the mouse genome for putative NRF1 binding sites.
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="60%", strand="*")
siteset
siteset[[1]]
## Scan the mouse genome for putative NRF1 binding sites.
seq <- DNAString('ACGTGCGCATGCGCATGCTG');
siteset <- searchSeq(pwms, seq, seqname="seq1", min.score="80%", strand="*")
siteset
siteset[[1]]
PFMatrixList[[1]]
##### Find the sites where NRF1 binds theoretically in the mouse genome (mm10) #####
library(JASPAR2016);
library(TFBSTools);
library(Biostrings);
## Obtain (human) PWM from Jaspar 2016.
opts <- list();
opts[["species"]] <- 9606;
opts[["name"]] <- "NRF1";
opts[["all_versions"]] <- TRUE;
PFMatrixList <- getMatrixSet(JASPAR2016, opts);
pwms <- toPWM(PFMatrixList);
pwms
pwms[[1]]
0.425/2
0.2125*2
1-0.2125*2
(1-0.2125*2)/2
1-0.425
pwms
pwms[[1]]
read.csv()
?read.csv
raw_ann <- read.csv(input_annotation);
input_annotation <- '~/Desktop/methylation_clock/optimize_RRBS/cuRRBS/utils/isoschizomers_CpG_CHG_CHH_annotation.csv'
output_path <- '~/Desktop/methylation_clock/optimize_RRBS/cuRRBS/utils/enzymes_to_check_CpG_CHG_CHH.txt'
raw_ann <- read.csv(input_annotation);
View(raw_ann)
input_annotation[,1]
raw_ann[,1]
as.character(raw_ann[,1])
unique(as.character(raw_ann[,1]))
iso_families <- unique(as.character(raw_ann[,1]));
family <- iso_families[1]
family
family_members <- raw_ann[which(raw_ann[,1] == family),];
family_members
any(c(0,1,3) == 0)
any(c(1,1,3) == 0)
any(as.numeric(family_members[,3]) == 0)
non_methylation_sensitive <- c(non_methylation_sensitive, family);
non_methylation_sensitive <- c();
non_methylation_sensitive <- c(non_methylation_sensitive, family);
non_methylation_sensitive
family <- family_members[2]
family
family
family_members
family <- iso_families[2]
family
family_members <- raw_ann[which(raw_ann[,1] == family),];
family_members
any(as.numeric(family_members[,3]) == 0)
as.numeric(family_members[,3])
family <- iso_families[3]
family
family_members <- raw_ann[which(raw_ann[,1] == family),];
family_members
any(as.numeric(family_members[,3]) == 0)
?any
any(as.numeric(family_members[,3]) == 0, na.rm=T)
family <- 'AclWI'
family_members <- raw_ann[which(raw_ann[,1] == family),];
family_members
any(as.numeric(family_members[,3]) == 0, na.rm=T)
3099734149/250
12398937 / 1000
12398937 / 1000 / 10
3,234.83 * 1000 / 250
3234.83 * 1000 / 250
1343.468/453.788
119.66775 * 1000000
119667750 / 250
478671 / 1000
453.788 / 478.671
478.671 / 453.788
2725.537669 * 1000000
2725.537669 * 1000000 / 250
10902151 / 1000
10902151 / 10000
1343.468 / 343.460
3088.286401 * 1000000
3088.286401 * 1000000 / 250
3088.286401 * 1000000 / 250 / 1000
3088.286401 * 1000000 / 250 / 1000 / 343.460
250/75
1343.468 / 453.788
119.66775 * 1000000
119.66775 * 1000000 / 250
119.66775 * 1000000 / 250 / 1000
478.671 / 453.788
1343.468 / 343.46
3088.286401 * 1000000
3088.286401 * 1000000 / 250
3088.286401 * 1000000 / 250 / 1000
12353.15 / 343.46
119.66775 * 1000000 / 75
119.66775 * 1000000 / 75 / 1000
119.66775 * 1000000 / 75 / 1000 / 165.313
RF_old = 119.66775 * 1000 / 250
RF_old
RF_new = 119.66775 * 1000 / 75
RF_new
1595.57 / 165.313
RF_old/RF_new
RF_old/RF_new * 3.52
39.33 / 0.3
36.82 / 0.3
81/329
?nls
3.6/100
3.33/41
3.6/85
541+16+30
3088.286401 * 1000 / 75
41177.15 / 1343.468
780 / 40
780 / 80
780 / 20
780/60
setwd('~/Desktop/methylation_clock/optimize_RRBS/cuRRBS_paper/Supp_Figure_2/Supp_Figure_2C/');
#### 1. Read all the cuRRBS output files and extract the robustness values. ####
R_values <- c();
for(file in list.files('cuRRBS_outputs/')){
raw_file <- read.csv(paste0('cuRRBS_outputs/', file));
R_values <- c(R_values, raw_file$Robustness);
};
suppressWarnings(suppressMessages(library(ggplot2)));
summary(R_values)
R_values
###########################################################
##################### Dependencies ########################
###########################################################
suppressWarnings(suppressMessages(library(ggplot2)));
setwd('~/Desktop/methylation_clock/optimize_RRBS/cuRRBS_paper/Supp_Figure_2/Supp_Figure_2C/');
list.files('cuRRBS_outputs/')
R_values <- c();
for(file in list.files('cuRRBS_outputs/')){
raw_file <- read.csv(paste0('cuRRBS_outputs/', file));
R_values <- c(R_values, raw_file$Robustness);
};
View(raw_file)
summary(R_values)
plot(density(R_values))
plot(density(log(R_values)))
plot(density(-log(R_values)))
plot(density(log(-log(R_values))))
is.na(R_values)
sum(is.na(R_values))
R_df <- as.data.frame(R=R_values);
R_df <- as.data.frame(x=R_values);
View(R_df)
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R, y=..density..), color='black');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black');
distribution_plot
q25 <- quantile(R_values,.25);
q75 <- quantile(R_values,.75);
q25
q75
summary(R_values)
q25 <- quantile(R_values,.25);
q75 <- quantile(R_values,.75);
med_R <- median(R_values);
R.dens <- density(R_values);
df.dens <- data.frame(x = R.dens$x, y = R.dens$y);
View(df.dens)
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black') +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_vline(xintercept = med_R);
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black') +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_vline(xintercept = med_R);
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black') +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_vline(xintercept = med_R, col='blue');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black') +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_vline(xintercept = med_R, col='blue', y=0);
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black') +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_vline(xintercept = med_R, col='blue', y=0, yend=max(df.dens));
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black') +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_vline(xintercept = med_R, col='blue') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold"));
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black') +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_vline(xintercept = med_R, col='blue') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=2) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_vline(xintercept = med_R, col='blue') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_vline(xintercept = med_R, col='blue') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_line(x = med_R, xend = med_R, y=0, yend=max(df.dens), col='blue') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=0, yend=max(df.dens), col='blue') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-0.2, yend=max(df.dens)+0.2, col='blue') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue', linetype='dashed') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue', linetype='dashed') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density') +
geom_text(x=0.6, y=10, summary(R_values));
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue', linetype='dashed') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density') +
geom_text(x=0.6, y=10, aes(label=summary(R_values)));
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue', linetype='dashed') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density') +
geom_text(x=0.6, y=10, summary(R_values));
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue', linetype='dashed') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density') +
geom_text(x=0.6, y=10, aes(label=summary(R_values)));
distribution_plot
summary(R_values)
as.character(summary(R_values))
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue', linetype='dashed') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density') +
annotate("text", x=0.6, y=10, label=summary(R_values));
distribution_plot
names(summary(R_values))
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue', linetype='dashed') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density')
distribution_plot
distribution_plot <- ggplot(data=R_df) +
geom_density(aes(x=R_values, y=..density..), color='black', size=1) +
geom_area(data = subset(df.dens, x >= q25 & x <= q75),
aes(x=x,y=y), fill = 'orange') +
geom_area(data = subset(df.dens, x < q25),
aes(x=x,y=y), fill = 'red') +
geom_area(data = subset(df.dens, x > q75),
aes(x=x,y=y), fill = 'green') +
geom_segment(x = med_R, xend=med_R, y=-1, yend=max(df.dens)+1, col='blue', linetype='dashed') +
theme_classic() +
theme(axis.text=element_text(size=10),
axis.title=element_text(size=14,face="bold")) +
xlab('Robustness') + ylab('Density');
source('~/Desktop/methylation_clock/optimize_RRBS/cuRRBS_paper/Supp_Figure_2/Supp_Figure_2C/robustness_distribution.R')
source('~/Desktop/methylation_clock/optimize_RRBS/cuRRBS_paper/Supp_Figure_2/Supp_Figure_2C/robustness_distribution.R')
summary(R_values)
